// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  uuid          String          @default(uuid()) @id @unique @db.Uuid
  createdAt     DateTime        @default(now()) @db.Timestamptz()
  username      String          @unique @db.VarChar(128)
  email         String          @unique @db.VarChar(320)
  password      String?         @db.VarChar(128)
  verified      Boolean         @default(false)
  role          Role            @default(USER)
  refreshTokens RefreshToken[]    
  otps          OTP[]
}

model RefreshToken {
  id            Int       @default(autoincrement()) @id
  user          User      @relation(fields: [userUuid], references: [uuid], onDelete: Cascade, onUpdate: Cascade)
  userUuid      String    @db.Uuid
  sub           String    @db.Uuid @unique
  token         String    
  rememberMe    Boolean   @default(false)
  accessedAt    DateTime  @db.Timestamptz()
  expiresAt     DateTime  @db.Timestamptz()
}

model OTP {
  id            Int       @default(autoincrement()) @id
  user          User      @relation(fields: [userUuid], references: [uuid], onDelete: Cascade, onUpdate: Cascade)
  userUuid      String    @db.Uuid
  code          String    @db.VarChar(6)
  purpose       Purpose
  createdAt     DateTime  @default(now()) @db.Timestamptz()
  expiresAt     DateTime  @db.Timestamptz()
}

enum Role {
  USER
  ADMIN_LEVEL_1
  ADMIN_LEVEL_2
}

enum Purpose {
  VERIFICATION
  PASSWORD_RESET
}